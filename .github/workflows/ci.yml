name: CI
on:
  push:        
    { branches: [main] }
  pull_request: 
    { branches: [main] }

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with: { global-json-file: global.json }
      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-
      - run: dotnet restore WebDownloadr.sln
      - name: Validate ADRs
        run: ./scripts/validate-adrs.sh

  build-and-test:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }          # ensure full history
      - uses: actions/setup-dotnet@v4
        with: { global-json-file: global.json }
      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-
      - run: dotnet restore WebDownloadr.sln
      - name: Build solution
        run: dotnet build WebDownloadr.sln --configuration Release --no-restore
      - name: Run tests with coverage
        run: |
          dotnet test WebDownloadr.sln \
            --configuration Release \
            --no-build \
            --verbosity normal \
            --collect:"XPlat Code Coverage" \
            --results-directory ./coverage
      - name: Run architecture tests
        run: ./scripts/archtest.sh
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      - uses: actions/setup-node@v4
        with: { cache: npm }
      - run: npm ci --omit=optional
