name: CI
on:
  push:        
    { branches: [main] }
  pull_request: 
    { branches: [main] }

jobs:
  check-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with: { global-json-file: global.json }
      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-
      - run: dotnet restore WebDownloadr.sln
      - name: Check .NET formatting
        run: dotnet format WebDownloadr.sln --verify-no-changes --verbosity diagnostic
      - name: MarkdownLint docs
        run: npx --yes markdownlint-cli2 "**/*.md" "#node_modules"
      - name: Prettier check
        run: npx --yes prettier --check --ignore-path .prettierignore "**/*.{md,json}"

  build-and-test:
    needs: check-formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }          # ensure full history
      - uses: actions/setup-dotnet@v4
        with: { global-json-file: global.json }
      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-
      - run: dotnet restore WebDownloadr.sln
      - run: dotnet test WebDownloadr.sln --configuration Release --verbosity normal
      - uses: actions/setup-node@v4
        with: { cache: npm }
      - run: npm ci --omit=optional
      - name: Validate commit messages
        run: |
          # find the common ancestor of main and HEAD
          base=$(git merge-base origin/main HEAD)
          echo "Linting commits from $base..HEAD"
          npx --yes @commitlint/cli --from "$base" --to HEAD
